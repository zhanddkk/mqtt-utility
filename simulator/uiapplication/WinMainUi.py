# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'WinMainUi.ui'
#
# Created by: PyQt5 UI code generator 5.7
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1024, 768)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/ico/ico/MainWindowIcon.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setDockOptions(QtWidgets.QMainWindow.AllowTabbedDocks|QtWidgets.QMainWindow.AnimatedDocks)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_3.setContentsMargins(1, 0, 1, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.data_monitor_table_view = QtWidgets.QTableView(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(9)
        self.data_monitor_table_view.setFont(font)
        self.data_monitor_table_view.setStyleSheet("alternate-background-color: rgb(249, 255, 247);\n"
"gridline-color: rgb(85, 170, 127);")
        self.data_monitor_table_view.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.data_monitor_table_view.setAlternatingRowColors(True)
        self.data_monitor_table_view.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.data_monitor_table_view.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.data_monitor_table_view.setGridStyle(QtCore.Qt.SolidLine)
        self.data_monitor_table_view.setObjectName("data_monitor_table_view")
        self.data_monitor_table_view.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_3.addWidget(self.data_monitor_table_view, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1024, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuTools = QtWidgets.QMenu(self.menubar)
        self.menuTools.setObjectName("menuTools")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.data_dictionary_dock_widget = QtWidgets.QDockWidget(MainWindow)
        self.data_dictionary_dock_widget.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.data_dictionary_dock_widget.setObjectName("data_dictionary_dock_widget")
        self.dockWidgetContents = QtWidgets.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.gridLayout = QtWidgets.QGridLayout(self.dockWidgetContents)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.data_dictionary_tree_view = QtWidgets.QTreeView(self.dockWidgetContents)
        self.data_dictionary_tree_view.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.data_dictionary_tree_view.setAlternatingRowColors(True)
        self.data_dictionary_tree_view.setSortingEnabled(True)
        self.data_dictionary_tree_view.setObjectName("data_dictionary_tree_view")
        self.data_dictionary_tree_view.header().setVisible(False)
        self.gridLayout.addWidget(self.data_dictionary_tree_view, 0, 0, 1, 1)
        self.data_dictionary_dock_widget.setWidget(self.dockWidgetContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.data_dictionary_dock_widget)
        self.log_dock_widget = QtWidgets.QDockWidget(MainWindow)
        self.log_dock_widget.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.log_dock_widget.setObjectName("log_dock_widget")
        self.dockWidgetContents_2 = QtWidgets.QWidget()
        self.dockWidgetContents_2.setObjectName("dockWidgetContents_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.dockWidgetContents_2)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.log_plain_text_edit = QtWidgets.QPlainTextEdit(self.dockWidgetContents_2)
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(8)
        self.log_plain_text_edit.setFont(font)
        self.log_plain_text_edit.setStyleSheet("background-color: rgb(245, 245, 245);")
        self.log_plain_text_edit.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.log_plain_text_edit.setReadOnly(True)
        self.log_plain_text_edit.setObjectName("log_plain_text_edit")
        self.gridLayout_2.addWidget(self.log_plain_text_edit, 1, 0, 1, 1)
        self.log_dock_widget.setWidget(self.dockWidgetContents_2)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.log_dock_widget)
        self.data_attribute_dock_widget = QtWidgets.QDockWidget(MainWindow)
        self.data_attribute_dock_widget.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.data_attribute_dock_widget.setObjectName("data_attribute_dock_widget")
        self.dockWidgetContents_3 = QtWidgets.QWidget()
        self.dockWidgetContents_3.setObjectName("dockWidgetContents_3")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.dockWidgetContents_3)
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.data_attribute_tree_widget = QtWidgets.QTreeWidget(self.dockWidgetContents_3)
        self.data_attribute_tree_widget.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.data_attribute_tree_widget.setAlternatingRowColors(True)
        self.data_attribute_tree_widget.setObjectName("data_attribute_tree_widget")
        item_0 = QtWidgets.QTreeWidgetItem(self.data_attribute_tree_widget)
        item_0 = QtWidgets.QTreeWidgetItem(self.data_attribute_tree_widget)
        item_0 = QtWidgets.QTreeWidgetItem(self.data_attribute_tree_widget)
        item_0 = QtWidgets.QTreeWidgetItem(self.data_attribute_tree_widget)
        item_0 = QtWidgets.QTreeWidgetItem(self.data_attribute_tree_widget)
        item_0 = QtWidgets.QTreeWidgetItem(self.data_attribute_tree_widget)
        item_0 = QtWidgets.QTreeWidgetItem(self.data_attribute_tree_widget)
        item_0 = QtWidgets.QTreeWidgetItem(self.data_attribute_tree_widget)
        item_0 = QtWidgets.QTreeWidgetItem(self.data_attribute_tree_widget)
        item_0 = QtWidgets.QTreeWidgetItem(self.data_attribute_tree_widget)
        item_0 = QtWidgets.QTreeWidgetItem(self.data_attribute_tree_widget)
        item_0 = QtWidgets.QTreeWidgetItem(self.data_attribute_tree_widget)
        item_0 = QtWidgets.QTreeWidgetItem(self.data_attribute_tree_widget)
        item_0 = QtWidgets.QTreeWidgetItem(self.data_attribute_tree_widget)
        item_0 = QtWidgets.QTreeWidgetItem(self.data_attribute_tree_widget)
        item_0 = QtWidgets.QTreeWidgetItem(self.data_attribute_tree_widget)
        item_0 = QtWidgets.QTreeWidgetItem(self.data_attribute_tree_widget)
        item_0 = QtWidgets.QTreeWidgetItem(self.data_attribute_tree_widget)
        item_0 = QtWidgets.QTreeWidgetItem(self.data_attribute_tree_widget)
        self.gridLayout_4.addWidget(self.data_attribute_tree_widget, 0, 0, 1, 1)
        self.data_attribute_dock_widget.setWidget(self.dockWidgetContents_3)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.data_attribute_dock_widget)
        self.repeater_dock_widget = QtWidgets.QDockWidget(MainWindow)
        self.repeater_dock_widget.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.repeater_dock_widget.setObjectName("repeater_dock_widget")
        self.dockWidgetContents_6 = QtWidgets.QWidget()
        self.dockWidgetContents_6.setObjectName("dockWidgetContents_6")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.dockWidgetContents_6)
        self.gridLayout_8.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.frame = QtWidgets.QFrame(self.dockWidgetContents_6)
        self.frame.setFrameShape(QtWidgets.QFrame.Box)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_9.setContentsMargins(1, 1, 1, 1)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.user_function_plain_text_edit = QtWidgets.QPlainTextEdit(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.user_function_plain_text_edit.sizePolicy().hasHeightForWidth())
        self.user_function_plain_text_edit.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Courier New")
        self.user_function_plain_text_edit.setFont(font)
        self.user_function_plain_text_edit.setStyleSheet("background-color: rgb(245, 245, 245);")
        self.user_function_plain_text_edit.setFrameShape(QtWidgets.QFrame.Box)
        self.user_function_plain_text_edit.setTextInteractionFlags(QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.user_function_plain_text_edit.setObjectName("user_function_plain_text_edit")
        self.gridLayout_9.addWidget(self.user_function_plain_text_edit, 3, 0, 1, 3)
        self.label_2 = QtWidgets.QLabel(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setObjectName("label_2")
        self.gridLayout_9.addWidget(self.label_2, 1, 0, 1, 1)
        self.label = QtWidgets.QLabel(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setObjectName("label")
        self.gridLayout_9.addWidget(self.label, 0, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy)
        self.label_3.setObjectName("label_3")
        self.gridLayout_9.addWidget(self.label_3, 2, 0, 1, 1)
        self.repeater_push_button = QtWidgets.QPushButton(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.repeater_push_button.sizePolicy().hasHeightForWidth())
        self.repeater_push_button.setSizePolicy(sizePolicy)
        self.repeater_push_button.setObjectName("repeater_push_button")
        self.gridLayout_9.addWidget(self.repeater_push_button, 4, 2, 1, 1)
        self.edit_user_function_push_button = QtWidgets.QPushButton(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.edit_user_function_push_button.sizePolicy().hasHeightForWidth())
        self.edit_user_function_push_button.setSizePolicy(sizePolicy)
        self.edit_user_function_push_button.setObjectName("edit_user_function_push_button")
        self.gridLayout_9.addWidget(self.edit_user_function_push_button, 2, 2, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_9.addItem(spacerItem, 4, 1, 1, 1)
        self.repeate_times_spin_box = QtWidgets.QSpinBox(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.repeate_times_spin_box.sizePolicy().hasHeightForWidth())
        self.repeate_times_spin_box.setSizePolicy(sizePolicy)
        self.repeate_times_spin_box.setObjectName("repeate_times_spin_box")
        self.gridLayout_9.addWidget(self.repeate_times_spin_box, 1, 1, 1, 2)
        self.interval_spin_box = QtWidgets.QSpinBox(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.interval_spin_box.sizePolicy().hasHeightForWidth())
        self.interval_spin_box.setSizePolicy(sizePolicy)
        self.interval_spin_box.setObjectName("interval_spin_box")
        self.gridLayout_9.addWidget(self.interval_spin_box, 0, 1, 1, 2)
        self.gridLayout_8.addWidget(self.frame, 0, 0, 1, 1)
        self.repeater_dock_widget.setWidget(self.dockWidgetContents_6)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.repeater_dock_widget)
        self.data_history_dock_widget = QtWidgets.QDockWidget(MainWindow)
        self.data_history_dock_widget.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.data_history_dock_widget.setObjectName("data_history_dock_widget")
        self.dockWidgetContents_7 = QtWidgets.QWidget()
        self.dockWidgetContents_7.setObjectName("dockWidgetContents_7")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.dockWidgetContents_7)
        self.gridLayout_7.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.data_history_tree_view = QtWidgets.QTreeView(self.dockWidgetContents_7)
        self.data_history_tree_view.setObjectName("data_history_tree_view")
        self.gridLayout_7.addWidget(self.data_history_tree_view, 0, 0, 1, 1)
        self.data_history_dock_widget.setWidget(self.dockWidgetContents_7)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.data_history_dock_widget)
        self.package_dock_widget = QtWidgets.QDockWidget(MainWindow)
        self.package_dock_widget.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.package_dock_widget.setObjectName("package_dock_widget")
        self.dockWidgetContents_8 = QtWidgets.QWidget()
        self.dockWidgetContents_8.setObjectName("dockWidgetContents_8")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.dockWidgetContents_8)
        self.gridLayout_6.setContentsMargins(1, 1, 1, 1)
        self.gridLayout_6.setVerticalSpacing(2)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.label_13 = QtWidgets.QLabel(self.dockWidgetContents_8)
        self.label_13.setObjectName("label_13")
        self.gridLayout_6.addWidget(self.label_13, 1, 0, 1, 1)
        self.topic_line_edit = QtWidgets.QLineEdit(self.dockWidgetContents_8)
        self.topic_line_edit.setEnabled(True)
        self.topic_line_edit.setText("")
        self.topic_line_edit.setReadOnly(True)
        self.topic_line_edit.setObjectName("topic_line_edit")
        self.gridLayout_6.addWidget(self.topic_line_edit, 2, 0, 1, 2)
        self.groupBox = QtWidgets.QGroupBox(self.dockWidgetContents_8)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout_5.setContentsMargins(-1, 4, 4, -1)
        self.gridLayout_5.setSpacing(2)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.label_14 = QtWidgets.QLabel(self.groupBox)
        self.label_14.setObjectName("label_14")
        self.gridLayout_5.addWidget(self.label_14, 10, 0, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.groupBox)
        self.label_5.setObjectName("label_5")
        self.gridLayout_5.addWidget(self.label_5, 0, 0, 1, 1)
        self.producer_mask_combo_box = QtWidgets.QComboBox(self.groupBox)
        self.producer_mask_combo_box.setEditable(True)
        self.producer_mask_combo_box.setInsertPolicy(QtWidgets.QComboBox.NoInsert)
        self.producer_mask_combo_box.setObjectName("producer_mask_combo_box")
        self.producer_mask_combo_box.addItem("")
        self.producer_mask_combo_box.addItem("")
        self.producer_mask_combo_box.addItem("")
        self.producer_mask_combo_box.addItem("")
        self.producer_mask_combo_box.addItem("")
        self.gridLayout_5.addWidget(self.producer_mask_combo_box, 3, 1, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.groupBox)
        self.label_6.setObjectName("label_6")
        self.gridLayout_5.addWidget(self.label_6, 1, 0, 1, 1)
        self.label_8 = QtWidgets.QLabel(self.groupBox)
        self.label_8.setObjectName("label_8")
        self.gridLayout_5.addWidget(self.label_8, 3, 0, 1, 1)
        self.label_11 = QtWidgets.QLabel(self.groupBox)
        self.label_11.setObjectName("label_11")
        self.gridLayout_5.addWidget(self.label_11, 6, 0, 1, 1)
        self.label_12 = QtWidgets.QLabel(self.groupBox)
        self.label_12.setObjectName("label_12")
        self.gridLayout_5.addWidget(self.label_12, 7, 0, 1, 1)
        self.label_10 = QtWidgets.QLabel(self.groupBox)
        self.label_10.setObjectName("label_10")
        self.gridLayout_5.addWidget(self.label_10, 5, 0, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.groupBox)
        self.label_7.setObjectName("label_7")
        self.gridLayout_5.addWidget(self.label_7, 2, 0, 1, 1)
        self.hash_id_line_edit = QtWidgets.QLineEdit(self.groupBox)
        self.hash_id_line_edit.setEnabled(False)
        self.hash_id_line_edit.setObjectName("hash_id_line_edit")
        self.gridLayout_5.addWidget(self.hash_id_line_edit, 2, 1, 1, 1)
        self.payoad_version_line_edit = QtWidgets.QLineEdit(self.groupBox)
        self.payoad_version_line_edit.setObjectName("payoad_version_line_edit")
        self.gridLayout_5.addWidget(self.payoad_version_line_edit, 1, 1, 1, 1)
        self.payload_type_combo_box = QtWidgets.QComboBox(self.groupBox)
        self.payload_type_combo_box.setEditable(True)
        self.payload_type_combo_box.setInsertPolicy(QtWidgets.QComboBox.NoInsert)
        self.payload_type_combo_box.setObjectName("payload_type_combo_box")
        self.payload_type_combo_box.addItem("")
        self.payload_type_combo_box.addItem("")
        self.gridLayout_5.addWidget(self.payload_type_combo_box, 0, 1, 1, 1)
        self.label_15 = QtWidgets.QLabel(self.groupBox)
        self.label_15.setObjectName("label_15")
        self.gridLayout_5.addWidget(self.label_15, 11, 0, 1, 1)
        self.label_9 = QtWidgets.QLabel(self.groupBox)
        self.label_9.setObjectName("label_9")
        self.gridLayout_5.addWidget(self.label_9, 4, 0, 1, 1)
        self.enable_data_object_check_box = QtWidgets.QCheckBox(self.groupBox)
        self.enable_data_object_check_box.setObjectName("enable_data_object_check_box")
        self.gridLayout_5.addWidget(self.enable_data_object_check_box, 8, 0, 1, 1)
        self.action_combo_box = QtWidgets.QComboBox(self.groupBox)
        self.action_combo_box.setEnabled(False)
        self.action_combo_box.setEditable(True)
        self.action_combo_box.setInsertPolicy(QtWidgets.QComboBox.NoInsert)
        self.action_combo_box.setObjectName("action_combo_box")
        self.action_combo_box.addItem("")
        self.action_combo_box.addItem("")
        self.action_combo_box.addItem("")
        self.action_combo_box.addItem("")
        self.gridLayout_5.addWidget(self.action_combo_box, 4, 1, 1, 1)
        self.time_stamp_s_line_edit = QtWidgets.QLineEdit(self.groupBox)
        self.time_stamp_s_line_edit.setObjectName("time_stamp_s_line_edit")
        self.gridLayout_5.addWidget(self.time_stamp_s_line_edit, 5, 1, 1, 1)
        self.time_stamp_ms_line_edit = QtWidgets.QLineEdit(self.groupBox)
        self.time_stamp_ms_line_edit.setObjectName("time_stamp_ms_line_edit")
        self.gridLayout_5.addWidget(self.time_stamp_ms_line_edit, 6, 1, 1, 1)
        self.device_index_line_edit = QtWidgets.QLineEdit(self.groupBox)
        self.device_index_line_edit.setEnabled(False)
        self.device_index_line_edit.setObjectName("device_index_line_edit")
        self.gridLayout_5.addWidget(self.device_index_line_edit, 7, 1, 1, 1)
        self.reference_type_line_edit = QtWidgets.QLineEdit(self.groupBox)
        self.reference_type_line_edit.setEnabled(False)
        self.reference_type_line_edit.setObjectName("reference_type_line_edit")
        self.gridLayout_5.addWidget(self.reference_type_line_edit, 10, 1, 1, 1)
        self.reference_value_line_edit = QtWidgets.QLineEdit(self.groupBox)
        self.reference_value_line_edit.setEnabled(False)
        self.reference_value_line_edit.setObjectName("reference_value_line_edit")
        self.gridLayout_5.addWidget(self.reference_value_line_edit, 11, 1, 1, 1)
        self.gridLayout_6.addWidget(self.groupBox, 3, 0, 1, 2)
        self.label_4 = QtWidgets.QLabel(self.dockWidgetContents_8)
        self.label_4.setObjectName("label_4")
        self.gridLayout_6.addWidget(self.label_4, 4, 0, 1, 1)
        self.publish_push_button = QtWidgets.QPushButton(self.dockWidgetContents_8)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.publish_push_button.sizePolicy().hasHeightForWidth())
        self.publish_push_button.setSizePolicy(sizePolicy)
        self.publish_push_button.setObjectName("publish_push_button")
        self.gridLayout_6.addWidget(self.publish_push_button, 6, 1, 1, 1)
        self.force_edit_package_check_box = QtWidgets.QCheckBox(self.dockWidgetContents_8)
        self.force_edit_package_check_box.setObjectName("force_edit_package_check_box")
        self.gridLayout_6.addWidget(self.force_edit_package_check_box, 0, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_6.addItem(spacerItem1, 6, 0, 1, 1)
        self.value_edit_tree_view = QtWidgets.QTreeView(self.dockWidgetContents_8)
        self.value_edit_tree_view.setObjectName("value_edit_tree_view")
        self.gridLayout_6.addWidget(self.value_edit_tree_view, 5, 0, 1, 2)
        self.package_dock_widget.setWidget(self.dockWidgetContents_8)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.package_dock_widget)
        self.actionImport = QtWidgets.QAction(MainWindow)
        self.actionImport.setObjectName("actionImport")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionSettings = QtWidgets.QAction(MainWindow)
        self.actionSettings.setObjectName("actionSettings")
        self.actionConnect_Broker = QtWidgets.QAction(MainWindow)
        self.actionConnect_Broker.setCheckable(True)
        self.actionConnect_Broker.setObjectName("actionConnect_Broker")
        self.menuFile.addAction(self.actionImport)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSettings)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionConnect_Broker)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menuHelp.addAction(self.actionAbout)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Simulator"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menuTools.setTitle(_translate("MainWindow", "Tools"))
        self.data_dictionary_dock_widget.setWindowTitle(_translate("MainWindow", "Data Dictionary"))
        self.log_dock_widget.setWindowTitle(_translate("MainWindow", "Log"))
        self.data_attribute_dock_widget.setWindowTitle(_translate("MainWindow", "Data Attribute"))
        self.data_attribute_tree_widget.headerItem().setText(0, _translate("MainWindow", "Name"))
        self.data_attribute_tree_widget.headerItem().setText(1, _translate("MainWindow", "Value"))
        __sortingEnabled = self.data_attribute_tree_widget.isSortingEnabled()
        self.data_attribute_tree_widget.setSortingEnabled(False)
        self.data_attribute_tree_widget.topLevelItem(0).setText(0, _translate("MainWindow", "Sub System"))
        self.data_attribute_tree_widget.topLevelItem(1).setText(0, _translate("MainWindow", "Data Path"))
        self.data_attribute_tree_widget.topLevelItem(2).setText(0, _translate("MainWindow", "Name"))
        self.data_attribute_tree_widget.topLevelItem(3).setText(0, _translate("MainWindow", "Description"))
        self.data_attribute_tree_widget.topLevelItem(4).setText(0, _translate("MainWindow", "Type"))
        self.data_attribute_tree_widget.topLevelItem(5).setText(0, _translate("MainWindow", "Format"))
        self.data_attribute_tree_widget.topLevelItem(6).setText(0, _translate("MainWindow", "Max Size"))
        self.data_attribute_tree_widget.topLevelItem(7).setText(0, _translate("MainWindow", "Default"))
        self.data_attribute_tree_widget.topLevelItem(8).setText(0, _translate("MainWindow", "Min"))
        self.data_attribute_tree_widget.topLevelItem(9).setText(0, _translate("MainWindow", "Max"))
        self.data_attribute_tree_widget.topLevelItem(10).setText(0, _translate("MainWindow", "Choice List"))
        self.data_attribute_tree_widget.topLevelItem(11).setText(0, _translate("MainWindow", "Scale Unit"))
        self.data_attribute_tree_widget.topLevelItem(12).setText(0, _translate("MainWindow", "Precision"))
        self.data_attribute_tree_widget.topLevelItem(13).setText(0, _translate("MainWindow", "Is Alarm"))
        self.data_attribute_tree_widget.topLevelItem(14).setText(0, _translate("MainWindow", "Is Event Log"))
        self.data_attribute_tree_widget.topLevelItem(15).setText(0, _translate("MainWindow", "Cmd Time Out"))
        self.data_attribute_tree_widget.topLevelItem(16).setText(0, _translate("MainWindow", "Producer"))
        self.data_attribute_tree_widget.topLevelItem(17).setText(0, _translate("MainWindow", "Consumer"))
        self.data_attribute_tree_widget.topLevelItem(18).setText(0, _translate("MainWindow", "Hash ID"))
        self.data_attribute_tree_widget.setSortingEnabled(__sortingEnabled)
        self.repeater_dock_widget.setWindowTitle(_translate("MainWindow", "Repeater"))
        self.label_2.setText(_translate("MainWindow", "Repeat Times:"))
        self.label.setText(_translate("MainWindow", "Interval(x100ms):"))
        self.label_3.setText(_translate("MainWindow", "Repeat Function:"))
        self.repeater_push_button.setText(_translate("MainWindow", "Start"))
        self.edit_user_function_push_button.setText(_translate("MainWindow", "Edit..."))
        self.data_history_dock_widget.setWindowTitle(_translate("MainWindow", "Data History"))
        self.package_dock_widget.setWindowTitle(_translate("MainWindow", "Package"))
        self.label_13.setText(_translate("MainWindow", "Topic:"))
        self.groupBox.setTitle(_translate("MainWindow", "Payload Package"))
        self.label_14.setText(_translate("MainWindow", "     |->Reference Type:"))
        self.label_5.setText(_translate("MainWindow", "Payload Type:"))
        self.producer_mask_combo_box.setItemText(0, _translate("MainWindow", "1 | UC"))
        self.producer_mask_combo_box.setItemText(1, _translate("MainWindow", "2 | SLC_UPS"))
        self.producer_mask_combo_box.setItemText(2, _translate("MainWindow", "4 | SCL_NMC"))
        self.producer_mask_combo_box.setItemText(3, _translate("MainWindow", "8 | HMI"))
        self.producer_mask_combo_box.setItemText(4, _translate("MainWindow", "16 | TUNER"))
        self.label_6.setText(_translate("MainWindow", "Payload Version:"))
        self.label_8.setText(_translate("MainWindow", "Producer Mask:"))
        self.label_11.setText(_translate("MainWindow", "Time Stamp(ms):"))
        self.label_12.setText(_translate("MainWindow", "Device Index:"))
        self.label_10.setText(_translate("MainWindow", "Time Stamp(s):"))
        self.label_7.setText(_translate("MainWindow", "Hash ID:"))
        self.payload_type_combo_box.setItemText(0, _translate("MainWindow", "0 | Dynamic"))
        self.payload_type_combo_box.setItemText(1, _translate("MainWindow", "1 | Property"))
        self.label_15.setText(_translate("MainWindow", "     |->Reference Value:"))
        self.label_9.setText(_translate("MainWindow", "Action:"))
        self.enable_data_object_check_box.setText(_translate("MainWindow", "Enable Data Object"))
        self.action_combo_box.setItemText(0, _translate("MainWindow", "0 | Publish"))
        self.action_combo_box.setItemText(1, _translate("MainWindow", "1 | Response"))
        self.action_combo_box.setItemText(2, _translate("MainWindow", "2 | Request"))
        self.action_combo_box.setItemText(3, _translate("MainWindow", "3 | Allow"))
        self.label_4.setText(_translate("MainWindow", "Value Edit:"))
        self.publish_push_button.setText(_translate("MainWindow", "Publish"))
        self.force_edit_package_check_box.setText(_translate("MainWindow", "Force Edit Package"))
        self.actionImport.setText(_translate("MainWindow", "Import"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionAbout.setText(_translate("MainWindow", "About..."))
        self.actionSettings.setText(_translate("MainWindow", "Settings..."))
        self.actionConnect_Broker.setText(_translate("MainWindow", "Connect Broker"))

import simulator.uiapplication.UiResource_rc
